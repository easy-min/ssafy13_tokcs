# Generated by Django 5.2 on 2025-04-13 10:22

import django.db.models.deletion
import tokcs.question.models.chapter
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='단원 이름')),
                ('order', models.IntegerField(default=0, verbose_name='순서')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200, verbose_name='보기 내용')),
                ('is_correct', models.BooleanField(default=False, verbose_name='정답 여부')),
            ],
            options={
                'verbose_name': '객관식 보기',
                'verbose_name_plural': '객관식 보기들',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100, unique=True, verbose_name='대표 키워드')),
                ('synonyms', models.JSONField(default=list, verbose_name='동의어 목록')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='문제 세트 제목')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('scheduled_date', models.DateField(help_text='문제 세트가 활성화될 날짜', verbose_name='시작 날짜')),
                ('close_date', models.DateField(help_text='문제 세트가 더 이상 접근 불가능한 날짜', verbose_name='마감 날짜')),
                ('total_score', models.PositiveIntegerField(default=100, verbose_name='총점')),
                ('is_active', models.BooleanField(default=False, help_text='시작 날짜가 지나고 마감 날짜 전이면 활성화됩니다.', verbose_name='활성화 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='주제 이름')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectiveQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('MCQ', '객관식'), ('SA', '주관식')], max_length=10, verbose_name='문제 유형')),
                ('content', models.TextField(verbose_name='문제 내용')),
                ('explanation', models.TextField(blank=True, verbose_name='해설')),
                ('score', models.PositiveIntegerField(blank=True, null=True, verbose_name='배점')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.chapter', verbose_name='단원')),
            ],
            options={
                'verbose_name': '객관식 문제',
                'verbose_name_plural': '객관식 문제들',
            },
        ),
        migrations.CreateModel(
            name='ObjectiveAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='채점 점수')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='제출일')),
                ('selected_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.choice', verbose_name='선택된 보기')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.objectivequestion', verbose_name='문제')),
            ],
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='question.objectivequestion'),
        ),
        migrations.CreateModel(
            name='ProblemSetQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('order', models.PositiveIntegerField(default=0, verbose_name='순서')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('problemset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='question.problemset', verbose_name='문제 세트')),
            ],
            options={
                'verbose_name': '문제 세트 문제',
                'verbose_name_plural': '문제 세트 문제들',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='QuestionKeywordMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importance', models.IntegerField(default=1, verbose_name='중요도')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.keyword')),
            ],
            options={
                'verbose_name': '문제-키워드 매핑',
            },
        ),
        migrations.CreateModel(
            name='SubjectiveQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('MCQ', '객관식'), ('SA', '주관식')], max_length=10, verbose_name='문제 유형')),
                ('content', models.TextField(verbose_name='문제 내용')),
                ('explanation', models.TextField(blank=True, verbose_name='해설')),
                ('score', models.PositiveIntegerField(blank=True, null=True, verbose_name='배점')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.chapter', verbose_name='단원')),
                ('keywords', models.ManyToManyField(through='question.QuestionKeywordMapping', to='question.keyword', verbose_name='채점용 키워드')),
            ],
            options={
                'verbose_name': '주관식 문제',
                'verbose_name_plural': '주관식 문제들',
            },
        ),
        migrations.CreateModel(
            name='SubjectiveAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(verbose_name='답안 내용')),
                ('score', models.IntegerField(default=0, verbose_name='채점 점수')),
                ('matched_keywords', models.JSONField(default=list, verbose_name='매칭된 키워드')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='제출일')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.subjectivequestion', verbose_name='문제')),
            ],
        ),
        migrations.AddField(
            model_name='questionkeywordmapping',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.subjectivequestion'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='topic',
            field=models.ForeignKey(default=tokcs.question.models.chapter.get_default_topic, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='question.topic', verbose_name='주제'),
        ),
        migrations.AlterUniqueTogether(
            name='questionkeywordmapping',
            unique_together={('question', 'keyword')},
        ),
    ]
